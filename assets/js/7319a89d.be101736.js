"use strict";(self.webpackChunkhippy=self.webpackChunkhippy||[]).push([[4771],{3905:(e,n,o)=>{o.d(n,{Zo:()=>d,kt:()=>u});var t=o(7294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function c(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=t.createContext({}),l=function(e){var n=t.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):c(c({},n),e)),o},d=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=l(o),u=r,g=m["".concat(s,".").concat(u)]||m[u]||p[u]||a;return o?t.createElement(g,c(c({ref:n},d),{},{components:o})):t.createElement(g,c({ref:n},d))}));function u(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,c=new Array(a);c[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=o[l];return t.createElement.apply(null,c)}return t.createElement.apply(null,o)}m.displayName="MDXCreateElement"},8180:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var t=o(7462),r=(o(7294),o(3905));const a={},c="MongoDB",i={unversionedId:"basic/storage/mongodb",id:"basic/storage/mongodb",title:"MongoDB",description:"Mongoose ODM",source:"@site/docs/basic/storage/mongodb.md",sourceDirName:"basic/storage",slug:"/basic/storage/mongodb",permalink:"/docs/basic/storage/mongodb",draft:!1,editUrl:"https://github.com/chenpeirui/chenpeirui.github.io/tree/main/docs/basic/storage/mongodb.md",tags:[],version:"current",frontMatter:{},sidebar:"basicSidebar",previous:{title:"\u89c4\u8303",permalink:"/docs/basic/storage/convention"},next:{title:"Redis",permalink:"/docs/basic/storage/redis"}},s={},l=[{value:"Mongoose ODM",id:"mongoose-odm",level:2},{value:"Connection",id:"connection",level:3},{value:"Schema defined and model creation",id:"schema-defined-and-model-creation",level:3},{value:"Insert",id:"insert",level:3},{value:"Find",id:"find",level:3},{value:"Data Type",id:"data-type",level:3}],d={toc:l};function p(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,t.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mongodb"},"MongoDB"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# connection\nmongo -u \"myUserAdmin\" -p \\\n--authenticationDatabase \"admin\" \\\n--port 27017\n\n# dump\nmongodump \\\n--db=test \\\n--archive=\"all-collections.archive\"\n\n# restore\nmongorestore \\\n--archive=\"all-collections.archive\" \\\n--nsFrom='test.*' \\\n--nsTo='example.*'\n\n# dump > restore\n# copy from test to example\nmongodump --archive --db=test | mongorestore --archive --nsFrom='test.*' --nsTo='example.*'\n\n# dump from container to localhost\ndocker exec some-mongo sh -c 'exec mongodump -d <database_name> --archive' > /some/path/on/your/host/all-collections.archive\n\n# params\n-u=user\n-p=pass\n--out=path\n--bd\n--authenticationDatabase\n--archive=mongodump-test-db\n")),(0,r.kt)("h2",{id:"mongoose-odm"},"Mongoose ODM"),(0,r.kt)("h3",{id:"connection"},"Connection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const mongoose = require('mongoose')\n\nconst MONGODB_URL = process.env.MONGODB_URL || 'mongodb://127.0.0.1/test'\n\nmongoose.connect(MONGODB_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).catch(console.error.bind(console, 'MongoDB connection error: '))\n\nmongoose.connection.once('open', () => {\n  console.log('MongoDB connected')\n})\n")),(0,r.kt)("h3",{id:"schema-defined-and-model-creation"},"Schema defined and model creation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"let schema = new mongoose.Schema({\n\n})\n\n// methods\n\nschema.methods.sayHi = function() {\n  console.log('Hi')\n}\n\n// mapping collection 'users' in database\n\nlet Model = mongoose.model('Model', schema)\n")),(0,r.kt)("h3",{id:"insert"},"Insert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"let doc = new Model({\n\n  // key-values\n\n})\n\ndoc.save((err, doc) => {\n  if (err) return console.error(err)\n\n  console.log(doc)\n})\n")),(0,r.kt)("h3",{id:"find"},"Find"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Model.find({})\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"mongoose.Types.ObjectId")),(0,r.kt)("h3",{id:"data-type"},"Data Type"),(0,r.kt)("p",null,"Schema, use array of ",(0,r.kt)("inlineCode",{parentName:"p"},"object"),", but array of ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."))}p.isMDXComponent=!0}}]);